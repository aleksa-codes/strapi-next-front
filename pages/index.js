import Head from 'next/head'
import styles from '../styles/Home.module.css'
import Blog from '../components/Blog'
import Header from '../components/Header'

const URL = process.env.STRAPI_BASE_URL

export async function getStaticProps() {
  const fetchParams = {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json'
    },
    body: JSON.stringify({
      query: `{
        blogposts{
          data{
            attributes{
              title
              blogbody
              description
              slug
              splash{
                data{
                  attributes{
                    url
                  }
                }
              }
            }
          }
        }
      }`
    })
  }

  try {
    const res = await fetch(`${URL}/graphql`, fetchParams)
    if (!res.ok) throw new Error(`Failed to fetch posts, received status ${res.status}`)

    const { data } = await res.json()

    if (!data || !data.blogposts) {
      throw new Error('Error Occured while fetching data')
    }
    const { blogposts } = data

    return {
      props: blogposts ? { data: blogposts.data } : { data: {} },
      revalidate: 10
    }
  } catch (error) {
    return {
      props: {
        error: error.message
      }
    }
  }
}

export default function Home({ data, error }) {
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <main className={styles.main}>
        <Header></Header>
        <div className={styles.grid}>
          {!error ? (
            data && data.length > 0 ? (
              data.map((post, i) => (
                <Blog
                  key={i}
                  slug={post.attributes.slug}
                  title={post.attributes.title}
                  description={post.attributes.description}
                ></Blog>
              ))
            ) : (
              <div>No posts</div>
            )
          ) : (
            <div>{error}</div>
          )}
        </div>
      </main>
    </>
  )
}
